[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = ""
authors = ["{{ cookiecutter.copyright_name }}"]
packages = [
    {include = "{{ cookiecutter.package_name }}"},
]
homepage = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_slug }}"
repository = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_slug }}"
readme = "README.md"

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"

[tool.poetry.dev-dependencies]
pytest = "^6.0.0"
toml = "^0.10"
ipdb = "^0.13.9"
ipython = "^8.0.1"
mypy = "^0.931"
pyflakes = "^2.4.0"
invoke = "^1.6.0"
termcolor = "^1.1.0"
pytest-cov = "^3.0.0"
changelog-cmd = "^0.2.0"

[tool.isort]
# Setting compatible with black. See https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.black]
line-length = 120
target-version = ['py{{ cookiecutter.python_version.split(".") | join("") }}']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
show_column_numbers = true
show_error_codes = true
color_output = true
warn_unused_configs = true
warn_unused_ignores = true
follow_imports = "normal"

[[tool.mypy.overrides]]
module = [
    "setuptools.*",
    "invoke.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = "tests"
python_functions = "should_*"

# Structure: https://docs.pytest.org/en/stable/warnings.html
# Values:    https://docs.python.org/3/library/warnings.html#describing-warning-filters
#            action:message:category:module:line
filterwarnings = []
