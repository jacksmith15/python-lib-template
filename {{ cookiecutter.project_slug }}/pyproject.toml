[project]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = ""
authors = [
    { name = "{{ cookiecutter.copyright_name }}" }
]
dependencies = []
readme = "README.md"
requires-python = ">= {{ cookiecutter.python_version }}"

[project.urls]
homepage = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_slug }}"
repository = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_slug }}"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
{%- if cookiecutter.package_type == "docker" %}
virtual = true
{%- endif %}
dev-dependencies = [
    "changelog-cmd~=0.2.0",
    "ipdb~=0.13.13",
    "ipython~=8.33.0",
    "isort~=6.0.1",
    "mypy~=1.15.0",
    "pytest-cov~=6.0.0",
    "pytest~=8.3.4",
    "requests~=2.32.3",
    "ruff~=0.9.9",
    "termcolor~=2.5.0",
    "toml~=0.10.2",
    "types-requests~=2.32.0.20250301",
    "types-toml~=0.10.8.20240310",
]

[tool.rye.scripts]
verify = { chain = ["lint", "types", "test"] }
types = { env = { PYTHONPATH = "src" }, cmd = "mypy src tests" }
lint = { chain = [ "lint:isort", "lint:ruff" ] }
"lint:isort" = { env = { PYTHONPATH = "src" }, cmd = "isort --check --diff src tests" }
"lint:ruff" = { env = { PYTHONPATH = "src" }, cmd = "ruff check src tests" }
fmt = { chain = [ "fmt:isort", "fmt:ruff" ] }
"fmt:isort" = { env = { PYTHONPATH = "src" }, cmd = "isort src tests" }
"fmt:ruff" = { env = { PYTHONPATH = "src" }, cmd = "ruff format src tests" }
test = { env = { PYTHONPATH = "src" }, cmd = "pytest --cov-report \"html:reports/cover\" --cov-branch --cov=src tests" }
coverage-open = { cmd = "xdg-open reports/cover/index.html" }
changelog-check = { cmd = "changelog validate" }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/{{ cookiecutter.package_name }}"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.isort]
atomic = true
multi_line_output = 3
profile = "black"
line_length = 120

[tool.mypy]
check_untyped_defs = true
color_output = true
follow_imports = "normal"
show_column_numbers = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
plugins = []
[[tool.mypy.overrides]]
module = [
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = "tests"
python_functions = ["test_*", "should_*"]
addopts = "-vv"
# Structure: https://docs.pytest.org/en/stable/warnings.html
# Values:    https://docs.python.org/3/library/warnings.html#describing-warning-filters
#            action:message:category:module:line
filterwarnings = []
